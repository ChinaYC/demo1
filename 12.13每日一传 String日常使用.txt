.toCharArray(); 字符串变量转换为字符数组
.charAt();通过索引获得字符和子字符串(单)
.substring(); 获得字符(多)。beginIndex,endIndex。
Sting[]  =  .split();用( )分割。定义=for循环输出
.subSequence( , );输出子字符串返回序列化//return this.substring(beginIndex, endIndex);
.toUpperCase();字符全部变大写
.toLowerCase();字符全部变小写




以下网址:
https://blog.csdn.net/expect521/article/details/77977650
原	
java 截取字符串获取子字符串

            两种方法
            简单示例1
            简单示例2
                方法一通过substring方法解决
                方法二通过split方法解决
                方法三通过正则表达式解决

两种方法：

    substring（int beginIndex）： 返回一个新的字符串，它是此字符串的一个子字符串。该子字符串从指定索引处的字符开始，直到此字符串末尾。

    substring(int beginIndex,int endIndex) ：返回一个新字符串，它是此字符串的一个子字符串。该子字符串从指定的 beginIndex 处开始，直到索引 endIndex - 1 处的字符。因此，该子字符串的长度为 endIndex-beginIndex

简单示例1：

package com.yubai;

/**
 * Created by bayu on 9/13/2017.
 */
public class string {
    public static void main(String[] args) {
        //定义字符串
        String str = "hello world!";

        //获取字符串的长度
        System.out.println(str.length());

        //截取子字符串
        System.out.println(str.substring(1, 3));

        //截取子字符串
        System.out.println(str.substring(3));

        //截取子字符串,长度大于或者为负数，则抛异常--IndexOutOfBoundsException
//        System.out.println(str.substring(123));
//        System.out.println(str.substring(-1));
    }
}

    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    22
    23
    24

    运行结果：

    12
    el
    lo world!

简单示例2：

需求：把”01:大汽车”，分成01和大汽车
方法一：通过substring方法解决

package com.yubai;

/**
 * Created by bayu on 9/13/2017.
 */
public class subString {
    public static void main(String[] args) {
        String str = "   01:大汽车   ";
        String L = "";
        String N = "";

        int strLength = str.length();

        for (int i = 0; i < strLength; i++) {
            if(str.substring(i, i + 1).equals(":")){
                  L = str.substring(0,i).trim();
                  N = str.substring(i+1,strLength).trim();
            }
        }
        System.out.println(L);
        System.out.println(N);
    }
}

    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    22
    23

方法二：通过split方法解决

package com.yubai;

/**
 * Created by bayu on 9/13/2017.
 */
public class split {
    public static void main(String[] args) {
        String str = "   01:???   ";
        String[] strArray = str.split(":");
        System.out.println(strArray[0].trim());
        System.out.println(strArray[1].trim());
    }
}

    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
    12
    13

方法三：通过正则表达式解决

package com.yubai;

/**
 * Created by bayu on 9/12/2017.
 */
public class Test {
    public static void main(String[] args) {
        String str = "one123";
        String regex = "(?<=one)(?=123)";

        String[] strs = str.split(regex);
        for (int i = 0; i < strs.length; i++) {
            System.out.printf("strs[%d] = %s%n", i, strs[i]);

        }
    }
 }